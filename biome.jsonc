{
  "$schema": "https://biomejs.dev/schemas/2.0.0/schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "files": {
    "includes": ["**", "!**/.trunk/**", "!**/build/**", "!**/dist/**", "!**/package.json"]
  },
  "formatter": {
    "attributePosition": "auto",
    "bracketSpacing": true,
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 120,
    "useEditorconfig": true
  },
  "assist": {
    "actions": {
      "source": {
        "organizeImports": {
          "level": "on",
          "options": {
            "groups": [
              { "type": false },
              ":NODE:",
              ":BLANK_LINE:",
              "@freelensapp/**",
              ":BLANK_LINE:",
              ":PACKAGE:",
              ":BLANK_LINE:",
              ":PATH:"
            ]
          }
        }
      }
    }
  },
  "linter": {
    "enabled": true,
    "rules": {
      "a11y": {
        "noRedundantRoles": "off"
      },
      "complexity": {
        "noBannedTypes": "off", // should be error later
        "noUselessConstructor": "off",
        "noUselessThisAlias": "error",
        "noUselessTypeConstraint": "error"
      },
      "correctness": {
        "noInvalidUseBeforeDeclaration": "error",
        "noUnusedVariables": "off", // should be error later
        "useExhaustiveDependencies": "off"
      },
      "recommended": false,
      "style": {
        "noNamespace": "error",
        "noParameterAssign": "off", // should be error later
        "useAsConstAssertion": "error",
        "useBlockStatements": "off",
        "useNamingConvention": {
          "level": "off",
          "options": {
            "strictCase": false
          }
        },
        "useTemplate": "off", // should be error later
        "useArrayLiterals": "off"
      },
      "suspicious": {
        "noEmptyInterface": "off",
        "noExplicitAny": "off", // should be error later
        "noExtraNonNullAssertion": "error",
        "noMisleadingInstantiator": "error",
        "noUnsafeDeclarationMerging": "off", // should be error later
        "useNamespaceKeyword": "error"
      }
    }
  },
  "javascript": {
    "formatter": {
      "arrowParentheses": "always",
      "attributePosition": "auto",
      "bracketSameLine": false,
      "bracketSpacing": true,
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "quoteStyle": "double",
      "semicolons": "always",
      "trailingCommas": "all"
    }
  }
}
